<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet"    href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />

    <link href="../css/main.css" rel="stylesheet" />
    <title>Game Model Three</title>
  </head>
  <body class="bg-gray-800 text-gray-900"> 
    <div
    class="modal fade"
    id="successModal"
    tabindex="-1"
    role="dialog"
    aria-labelledby="successModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="successModalLabel">Success</h5>
          <button
            type="button"
            class="close"
            data-dismiss="modal"
            aria-label="Close"
          >
            <span class="text-white" aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          Game Have been Added Successfully
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-dismiss="modal"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  </div>
    <main>
      <div class="m-12">
        <a
          href="/games"
          class="inline-flex items-center border border-indigo-300 px-3 py-1.5 rounded-md text-indigo-500 hover:bg-slate-200 bg-indigo-50"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            class="h-6 w-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M7 16l-4-4m0 0l4-4m-4 4h18"
            ></path>
          </svg>
          <span class="ml-1 font-bold text-lg">Back</span>
        </a>
      </div>
      <div class=" mx-auto w-[98%] sm:w-[70%] sm:m-12 bg-gray-200 bg-opacity-10 p-3 rounded-lg">
        <form method="POST" action="/admin/create-game-modeltwo" 
        enctype="multipart/form-data" 
         class="space-y-4">
          <div
            class="rounded-md border w-full border-indigo-500 bg-gray-500 p-2 shadow-md"
          >
            <label
              for="upload"
              class="flex flex-col items-center gap-1 text-white cursor-pointer"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-10 w-10 fill-white stroke-indigo-500"
                viewBox="0 0 24 24"
                stroke="currentColor"
                stroke-width="2"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                />
              </svg>
              <span  class ="span text-white font-mono">Upload Game Image</span>
            </label>
            <input required id="upload" name="image" type="file" class="hidden" />
          </div>
          <div>
            <label class="sr-only" for="name">Title</label>
            <input
              class="w-full bg-transparent focus:border-gray-300 focus:outline-none text-white rounded-lg placeholder:text-white border-gray-500 border-2 p-2 text-lg"
              placeholder="Game Title"
              type="text"
              name="title"
              id="name" 
              required
            />
          </div>

          <div>
            <label class="sr-only" for="message">Description Of Game</label>

            <textarea
              class="w-full bg-transparent placeholder:text-white focus:border-gray-300 focus:outline-none text-white rounded-lg border-gray-500 border-2 p-2 text-lg"
              placeholder="Description Of Game"
              rows="5"
              id="Description"
              name="description"
              required
            ></textarea>
          </div>
          <div>
            <label
              for="jewelCount"
              class="block text-lg p-2 font-medium text-gray-100"
              >Jewel Count</label
            >
            <input
              type="number"
              id="jewelCount"
              name="jewelCount"
              placeholder="0"
              class="w-full bg-transparent focus:border-gray-300 focus:outline-none text-white rounded-lg border-gray-500 border-2 p-3 text-lg"
              required
            />
          </div>
          <div>
            <label
              for="isPaid"
              class="block text-lg p-2 font-medium text-gray-100"
              >Is Paid?</label
            >
            <select
              id="isPaid"
              name="isPaid"
              class="w-full bg-transparent focus:border-gray-300 focus:outline-none text-white rounded-lg border-gray-500 border-2 p-3 text-lg"
              required
            >
              <option value="true">Yes</option>
              <option value="false">No</option>
            </select>
          </div>
          <div id="items-container" class="flex w-[98%]  mx-auto  items-center justify-center gap-4 flex-wrap"></div>
          <div class="flex flex-wrap items-center justify-between">
            <div class="mt-4">
              <button
                type="submit"
                class="inline-block w-full rounded-lg bg-black px-5 py-3 font-medium text-white sm:w-auto"
              >
                Create Game
              </button>
            </div>

        
          </div>
        </form> 
        <div class=" flex justify-end items-center  m-4 cursor-pointer">
          <div class="flex justify-center sm:justify-end">
            <button
              type="button"
              class="text-slate-900 font-bold bg-yellow-400 hover:bg-yellow-500 focus:outline-none focus:ring-4 focus:ring-yellow-300 rounded-full text-lg px-5 py-2.5 text-center me-2 mb-2 dark:focus:ring-yellow-900"
              data-toggle="modal"
              data-target="#addAnalyticsModal"
            >
              Add Question
            </button>
          </div>
        </div>
      </div>
      <div
      class="modal fade"
      id="addAnalyticsModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="addAnalyticsModalLabel"
      aria-hidden="true"
    >
    <div id="form_question" class="modal-dialog" role="document">
      <div class="modal-content"> 
        <div class="p-2">
          <textarea id="question" name="question" placeholder="Question" class="w-full rounded-xl bg-transparent focus:border-gray-300 focus:outline-none text-white border-gray-500 border-2 p-3 text-lg"></textarea>
          <div class="h-4"></div>
          <textarea id="answer" name="answer" placeholder="Answer" class="w-full rounded-xl bg-transparent focus:border-gray-300 focus:outline-none text-white border-gray-500 border-2 p-3 text-lg"></textarea>
          

        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="submit" id="uploadButton" class="btn btn-primary">Add Question</button>
        </div>
      </div>
    </div>
    
        </div>
      </div> 
    
    </main>  
    <script> 
  const uploadedImages = [];

  const fileInputs = document.querySelectorAll('input[type="file"]');
  
  fileInputs.forEach((input) => {
    input.addEventListener('change', () => {
      const file = input.files[0];
      const span = document.querySelector(`label[for="${input.id}"] .status-span`);

      if (file) {
        // Display the file name and size
        span.textContent = `Selected file: ${file.name}, Size: ${file.size} bytes`;

        // Optionally, you can display a preview for image files
        if (file.type.startsWith('image/')) {
          const reader = new FileReader();
          
          reader.onload = (e) => {
            const img = document.createElement('img');
            img.src = e.target.result;
            img.style.maxWidth = '200px'; // Adjust as needed
            img.style.marginTop = '10px';
            span.appendChild(img);
          };
          
          reader.readAsDataURL(file);
        }
      } else {
        span.textContent = 'No file selected.';
      }
    });
  }); 

  const questions = [];
const btn = document.getElementById('uploadButton');

btn.addEventListener('click', function() {
  const inputQuestion = document.getElementById('question');
  const inputAnswer = document.getElementById('answer');
  const questionValue = inputQuestion.value;
  const answerValue = inputAnswer.value;

  
  if (questionValue && answerValue) {
    questions.push({question: questionValue, answer: answerValue});
    inputQuestion.value = '';
    inputAnswer.value = '';
    renderQuestions();
  }
});

const container = document.getElementById('items-container');

const renderQuestions = () => {
  // Clear the container before rendering
  container.innerHTML = '';

  questions.forEach((question, idx) => {
    // Create a new div element for each question
    const questionDiv = document.createElement('div');
    questionDiv.className = 'bg-white bg-opacity-10 rounded-lg shadow-md p-2 mb-2'; // Add margin-bottom for spacing
    
    questionDiv.innerHTML = `
    <div class="relative bg-gray-800 p-2 rounded-lg shadow-md">
  <!-- Remove Button -->
  <span onclick="removeQuestion(${idx})" class="absolute top-0 right-0 cursor-pointer px-1  font-bold text-xl text-white bg-red-600 rounded-full hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500">
    Ã—
  </span>
  
<div class="mb-3"></div>
  <div class="flex items-center justify-center gap-2 mb-1">
    <h5 class="text-lg font-bold text-white">Question ${idx + 1}</h5>
    <input type="text" name="question[${idx}]" class="border-none outline-none rounded-lg break-all border-gray-500 p-2  text-sm sm:text-lg bg-gray-700 text-white" value="${question.question}" placeholder="Edit Question">
  </div>
  
  <!-- Answer Section -->
  <div class="flex items-center justify-center gap-2">
    <h5 class="text-lg font-bold text-white">Answer ${idx + 1}</h5>
    <input type="text" name="answer[${idx}]" class="border-none outline-none rounded-lg break-all border-gray-500 p-1  text-sm sm:text-lg bg-gray-700 text-white" value="${question.answer}" placeholder="Edit Answer">
  </div>
</div>

    `;

    // Append the new div to the container
    container.appendChild(questionDiv);
  });
};
 
const removeQuestion = (idx) => {
  questions.splice(idx, 1);
  renderQuestions();
} 



// Initial render to display any existing questions
renderQuestions();
  
document.addEventListener("DOMContentLoaded", function () {
        // Ensure that PersonAnalytic has a default value if not passed
        const gameAddedBool =
          '<%= typeof gameAdded !== "undefined" ? gameAdded : "false" %>';
        if (gameAddedBool === "true") {
          const successModal = new bootstrap.Modal(
            document.getElementById("successModal")
          );
          successModal.show();
        }
      });
    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src=".../js/main.js"></script>
  </body>
</html>
